{"version":3,"file":"bar-proportion-card.js","mappings":"0mEAC6E,IAEvEA,EAAiB,SAAAC,GAAA,SAAAD,IAAA,O,4FAAAE,CAAA,KAAAF,G,qYAAAG,CAAA,KAAAH,EAAAI,UAAA,Q,qRAAAC,CAAAL,EAAAC,G,EAAAD,E,EAAA,EAAAM,IAAA,YAAAC,MAqBrB,SAAUC,GACR,IAAKA,EAAOC,WAAaC,MAAMC,QAAQH,EAAOC,UAC5C,MAAM,IAAIG,MAAM,0BAElBC,KAAKL,O,+VAAMM,CAAA,CACTC,aAAc,aACdC,KAAM,GACNC,SAAU,GACPT,EAEP,GAAC,CAAAF,IAAA,OAAAY,IAED,SAASC,GACPN,KAAKO,MAAQD,EACRN,KAAKQ,UACRR,KAAKQ,QAAUC,SAASC,cAAc,OACtCV,KAAKW,YAAYX,KAAKQ,UAExBR,KAAKY,YACP,GAAC,CAAAnB,IAAA,aAAAC,MAED,WAAa,IAAAmB,EAAA,KACLC,EAASd,KAAKL,OAAOC,SAASmB,KAAI,SAAAC,GAAM,OCtC3C,SAA2BA,EAAQV,GACxC,IAAMW,EAAQX,EAAKY,OAAOF,EAAOA,QACjC,OAAKC,EAQE,CACLE,KAAMH,EAAOG,MAAQF,EAAMG,WAAWC,eAAiBL,EAAOA,OAC9DtB,MAAO4B,WAAWL,EAAMA,QAAU,EAClCM,MAAOP,EAAOO,OAAS,yBAVvBC,QAAQC,KAAK,UAADC,OAAWV,EAAOA,OAAM,eAC7B,CACLG,KAAMH,EAAOG,MAAQH,EAAOA,OAC5BtB,MAAO,EACP6B,MAAOP,EAAOO,OAAS,wBAQ7B,CDwBMI,CAAkBX,EAAQH,EAAKN,MAAM,IAGjCqB,EAAQd,EAAOe,QAAO,SAACC,EAAKC,GAAI,OAAKD,EAAMC,EAAKrC,KAAK,GAAE,GAE7DM,KAAKQ,QAAQwB,UAAY,kBAAHN,OEpDX,4nCFqDM,uCAAAA,OAEX1B,KAAKL,OAAOsC,MAAQ,sBAAHP,OAAyB1B,KAAKL,OAAOsC,MAAK,SAAU,GAAE,+DAAAP,OAGrEZ,EAAOC,KAAI,SAAAgB,GAAI,iFAAAL,OAEOK,EAAKrC,MAAQkC,EAAQ,IAAG,yBAAAF,OAAyBK,EAAKR,MAAK,0CAEhFW,KAAK,IAAG,gEAAAR,OAITZ,EAAOC,KAAI,SAAAgB,GAAI,mHAAAL,OAEwCK,EAAKR,MAAK,mCAAAG,OACvDK,EAAKZ,KAAI,MAAAO,OCrExB,SAAuBhC,EAAOkC,EAAOjC,GAC1C,MAA4B,eAAxBA,EAAOO,aACF,GAAPwB,QAAWhC,EAAQkC,EAAQ,KAAKO,QAAQxC,EAAOS,UAAS,KAEjD,GAAPsB,OAAUhC,EAAMyC,QAAQxC,EAAOS,WAASsB,OAAG/B,EAAOQ,KAEtD,CD+DoCiC,CAAcL,EAAKrC,MAAOkC,EAAOf,EAAKlB,QAAO,+CAEpEuC,KAAK,IAAG,2CAInB,I,EAAC,EAAAzC,IAAA,mBAAAC,MAvED,WACE,OAAOe,SAASC,cAAc,6BAChC,GAAC,CAAAjB,IAAA,gBAAAC,MAED,WACE,MAAO,CACLuC,MAAO,yBACPrC,SAAU,CACR,CACEoB,OAAQ,GACRG,KAAM,GACNI,MAAO,yBAGXrB,aAAc,aACdE,SAAU,EACVD,KAAM,GAEV,I,4FAAC,CAnBoB,CAmBpBkC,EAnB6BC,cA2EhCC,eAAeC,OAAO,sBAAuBrD,E","sources":["webpack://bar-proportion-card/./src/bar-proportion-card.js","webpack://bar-proportion-card/./src/bar-proportion-utils.js","webpack://bar-proportion-card/./src/bar-proportion-styles.js"],"sourcesContent":["import styles from './bar-proportion-styles.js';\nimport { formatDisplay, processEntityData } from './bar-proportion-utils.js';\n\nclass BarProportionCard extends HTMLElement {\n  static getConfigElement() {\n    return document.createElement('bar-proportion-card-editor');\n  }\n\n  static getStubConfig() {\n    return {\n      title: \"Ma barre de proportion\",\n      entities: [\n        {\n          entity: \"\",\n          name: \"\",\n          color: \"var(--primary-color)\"\n        }\n      ],\n      display_mode: \"percentage\",\n      decimals: 0,\n      unit: \"\"\n    };\n  }\n\n  setConfig(config) {\n    if (!config.entities || !Array.isArray(config.entities)) {\n      throw new Error('Please define entities');\n    }\n    this.config = {\n      display_mode: 'percentage',\n      unit: '',\n      decimals: 0,\n      ...config\n    };\n  }\n\n  set hass(hass) {\n    this._hass = hass;\n    if (!this.content) {\n      this.content = document.createElement('div');\n      this.appendChild(this.content);\n    }\n    this.updateCard();\n  }\n\n  updateCard() {\n    const values = this.config.entities.map(entity => \n      processEntityData(entity, this._hass)\n    );\n\n    const total = values.reduce((sum, item) => sum + item.value, 0);\n    \n    this.content.innerHTML = `\n      <style>${styles}</style>\n      <ha-card>\n        ${this.config.title ? `<h1 class=\"header\">${this.config.title}</h1>` : ''}\n        \n        <div class=\"bar-container\">\n          ${values.map(item => `\n            <div class=\"bar-section\" \n                 style=\"width: ${(item.value / total * 100)}%; background-color: ${item.color};\">\n            </div>\n          `).join('')}\n        </div>\n\n        <div class=\"legend\">\n          ${values.map(item => `\n            <div class=\"legend-item\">\n              <div class=\"legend-color\" style=\"background-color: ${item.color};\"></div>\n              <span>${item.name} (${formatDisplay(item.value, total, this.config)})</span>\n            </div>\n          `).join('')}\n        </div>\n      </ha-card>\n    `;\n  }\n}\n\ncustomElements.define('bar-proportion-card', BarProportionCard);\n","export function formatDisplay(value, total, config) {\n  if (config.display_mode === 'percentage') {\n    return `${(value / total * 100).toFixed(config.decimals)}%`;\n  } else {\n    return `${value.toFixed(config.decimals)}${config.unit}`;\n  }\n}\n\nexport function processEntityData(entity, hass) {\n  const state = hass.states[entity.entity];\n  if (!state) {\n    console.warn(`Entity ${entity.entity} not found`);\n    return {\n      name: entity.name || entity.entity,\n      value: 0,\n      color: entity.color || 'var(--primary-color)'\n    };\n  }\n  return {\n    name: entity.name || state.attributes.friendly_name || entity.entity,\n    value: parseFloat(state.state) || 0,\n    color: entity.color || 'var(--primary-color)'\n  };\n}\n","const styles = `\n  ha-card {\n    background: var(--ha-card-background, var(--card-background-color));\n    border-radius: var(--ha-card-border-radius, 12px);\n    box-shadow: var(--ha-card-box-shadow, 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12));\n    color: var(--primary-text-color);\n    padding: 16px;\n  }\n  .header {\n    color: var(--primary-text-color);\n    font-size: var(--ha-card-header-font-size, 24px);\n    line-height: 1.2;\n    margin-bottom: 16px;\n    font-weight: normal;\n  }\n  .bar-container {\n    width: 100%;\n    height: 24px;\n    display: flex;\n    border-radius: 12px;\n    overflow: hidden;\n    background: var(--secondary-background-color);\n    margin: 8px 0;\n  }\n  .bar-section {\n    height: 100%;\n    transition: width 0.5s ease-in-out;\n  }\n  .legend {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 16px;\n    margin-top: 12px;\n    color: var(--primary-text-color);\n  }\n  .legend-item {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n  .legend-color {\n    width: 12px;\n    height: 12px;\n    border-radius: 3px;\n  }\n`;\n\nexport default styles;\n"],"names":["BarProportionCard","_HTMLElement","_classCallCheck","_callSuper","arguments","_inherits","key","value","config","entities","Array","isArray","Error","this","_objectSpread","display_mode","unit","decimals","set","hass","_hass","content","document","createElement","appendChild","updateCard","_this","values","map","entity","state","states","name","attributes","friendly_name","parseFloat","color","console","warn","concat","processEntityData","total","reduce","sum","item","innerHTML","title","join","toFixed","formatDisplay","_wrapNativeSuper","HTMLElement","customElements","define"],"sourceRoot":""}